openapi: 3.0.3
info:
  title: CaroWebApp Auth API
  version: 1.0.0
  description: |
    API zur Authentifizierung, E-Mail-Bestätigung und Verwaltung von Benutzerprofilen.
  contact:
    name: Backend-Team
    email: support@carowebapp.io
servers:
  - url: https://api.carowebapp.io/api/v1
    description: Produktionsserver

tags:
  - name: Auth
    description: Authentifizierung und Registrierung von Benutzern
  - name: Profile
    description: Verwaltung von Benutzerprofilen

paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: Benutzeranmeldung
      description: Authentifiziert den Benutzer und gibt Zugriffstoken zurück.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Erfolgreiche Authentifizierung
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Ungültige Anmeldedaten

  /auth/register:
    post:
      tags: [Auth]
      summary: Neuen Benutzer registrieren
      description: Erstellt ein neues Benutzerkonto basierend auf E-Mail, Passwort und Rolle.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Benutzer erfolgreich registriert
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
        '400':
          description: Validierungsfehler

  /auth/confirm:
    get:
      tags: [Auth]
      summary: E-Mail-Adresse bestätigen
      description: Bestätigt die E-Mail-Adresse anhand eines übermittelten Tokens.
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: E-Mail erfolgreich bestätigt
        '400':
          description: Ungültiges oder abgelaufenes Token

  /auth/resend-confirmation:
    post:
      tags: [Auth]
      summary: Bestätigungs-E-Mail erneut senden
      description: Sendet die Bestätigungs-E-Mail erneut an einen angemeldeten Benutzer.
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Bestätigungs-E-Mail gesendet
        '400':
          description: E-Mail bereits bestätigt
        '429':
          description: Zu viele Anfragen

  /auth/create-profile:
    post:
      tags: [Profile]
      summary: Benutzerprofil erstellen
      description: Erstellt ein Benutzerprofil mit persönlichen Informationen.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      responses:
        '201':
          description: Profil erfolgreich erstellt
        '401':
          description: Nicht autorisiert
        '500':
          description: Interner Serverfehler

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          description: Die E-Mail-Adresse des Benutzers
        password:
          type: string
          format: password
          description: Das Passwort des Benutzers

    RegisterRequest:
      type: object
      required: [email, password, role]
      properties:
        email:
          type: string
          format: email
          description: E-Mail-Adresse für die Registrierung
        password:
          type: string
          description: Passwort für das neue Konto
        role:
          type: string
          description: Rolle des Benutzers

    CreateProfileRequest:
      type: object
      required: [salutation, firstName, lastName, street, houseNumber, postalCode, city]
      properties:
        salutation:
          type: string
          description: Anrede
        title:
          type: string
          description: Titel (optional)
        firstName:
          type: string
          description: Vorname
        lastName:
          type: string
          description: Nachname
        street:
          type: string
          description: Straße
        houseNumber:
          type: string
          description: Hausnummer
        postalCode:
          type: string
          description: Postleitzahl
        city:
          type: string
          description: Stadt

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Zugriffstoken (JWT)
        refresh_token:
          type: string
          description: Token zur Erneuerung der Sitzung
        email_confirmed:
          type: boolean
          description: Gibt an, ob die E-Mail bestätigt wurde
        role:
          type: string
          description: Rolle des Benutzers
        profile_status:
          type: string
          description: Status des Benutzerprofils
